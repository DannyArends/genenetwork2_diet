// Generated by CoffeeScript 1.6.1
(function() {
  var root;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  $(function() {
    var composite_mapping_fields, get_progress, submit_special, toggle_enable_disable, update_time_remaining,
      _this = this;
    submit_special = function() {
      var url;
      console.log("In submit_special");
      console.log("this is:", this);
      console.log("$(this) is:", $(this));
      url = $(this).data("url");
      console.log("url is:", url);
      $("#trait_data_form").attr("action", url);
      return $("#trait_data_form").submit();
    };
    update_time_remaining = function(percent_complete) {
      var minutes_remaining, now, period, total_seconds_remaining;
      now = new Date();
      period = now.getTime() - root.start_time;
      console.log("period is:", period);
      if (period > 8000) {
        total_seconds_remaining = (period / percent_complete * (100 - percent_complete)) / 1000;
        minutes_remaining = Math.round(total_seconds_remaining / 60);
        if (minutes_remaining < 3) {
          return $('#time_remaining').text(Math.round(total_seconds_remaining) + " seconds remaining");
        } else {
          return $('#time_remaining').text(minutes_remaining + " minutes remaining");
        }
      }
    };
    get_progress = function() {
      var params, params_str, temp_uuid, url,
        _this = this;
      console.log("temp_uuid:", $("#temp_uuid").val());
      temp_uuid = $("#temp_uuid").val();
      params = {
        key: temp_uuid
      };
      params_str = $.param(params);
      url = "/get_temp_data?" + params_str;
      console.log("url:", url);
      $.ajax({
        type: "GET",
        url: url,
        success: function(progress_data) {
          var percent_complete;
          percent_complete = progress_data['percent_complete'];
          console.log("in get_progress data:", progress_data);
          $('#marker_regression_progress').css("width", percent_complete + "%");
          if (root.start_time) {
            if (!isNaN(percent_complete)) {
              return update_time_remaining(percent_complete);
            }
          } else {
            return root.start_time = new Date().getTime();
          }
        }
      });
      return false;
    };
    $("#interval_mapping_compute").click(function() {
      var form_data, url;
      $("#progress_bar_container").modal();
      url = "/interval_mapping";
      form_data = $('#trait_data_form').serialize();
      console.log("form_data is:", form_data);
      $.ajax({
        type: "POST",
        url: url,
        data: form_data,
        error: function(xhr, ajaxOptions, thrownError) {
          alert("Sorry, an error occurred");
          console.log(xhr);
          clearInterval(_this.my_timer);
          $('#progress_bar_container').modal('hide');
          return $("body").html("We got an error.");
        },
        success: function(data) {
          clearInterval(_this.my_timer);
          $('#progress_bar_container').modal('hide');
          return $("body").html(data);
        }
      });
      console.log("settingInterval");
      _this.my_timer = setInterval(get_progress, 1000);
      return false;
    });
    $('#suggestive').hide();
    $('input[name=display_all]').change(function() {
      console.log("check");
      if ($('input[name=display_all]:checked').val() === "False") {
        return $('#suggestive').show();
      } else {
        return $('#suggestive').hide();
      }
    });
    $("#marker_regression_compute").click(function() {
      var form_data, url;
      $("#progress_bar_container").modal();
      url = "/marker_regression";
      form_data = $('#trait_data_form').serialize();
      console.log("form_data is:", form_data);
      $.ajax({
        type: "POST",
        url: url,
        data: form_data,
        error: function(xhr, ajaxOptions, thrownError) {
          alert("Sorry, an error occurred");
          console.log(xhr);
          clearInterval(_this.my_timer);
          $('#progress_bar_container').modal('hide');
          return $("body").html("We got an error.");
        },
        success: function(data) {
          clearInterval(_this.my_timer);
          $('#progress_bar_container').modal('hide');
          return $("body").html(data);
        }
      });
      console.log("settingInterval");
      _this.my_timer = setInterval(get_progress, 1000);
      return false;
    });
    composite_mapping_fields = function() {
      return $(".composite_fields").toggle();
    };
    $("#use_composite_choice").change(composite_mapping_fields);
    toggle_enable_disable = function(elem) {
      return $(elem).prop("disabled", !$(elem).prop("disabled"));
    };
    $("#choose_closet_control").change(function() {
      return toggle_enable_disable("#control_locus");
    });
    return $("#display_all_lrs").change(function() {
      return toggle_enable_disable("#suggestive_lrs");
    });
  });

}).call(this);
