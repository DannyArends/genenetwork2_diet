// Generated by CoffeeScript 1.3.3
(function() {

  $(function() {
    var chr, largest_chr, plot_coordinates, result, svg, x_coords, x_max, y_coords, y_max, _i, _j, _len, _len1, _ref, _ref1,
      _this = this;
    x_coords = [];
    y_coords = [];
    largest_chr = 0;
    _ref = js_data.qtl_results;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      result = _ref[_i];
      chr = parseInt(result.chr);
      console.log("foo:", chr, typeof chr);
      if (_.isNaN(chr)) {
        console.log("Got NaN");
      } else {
        if (chr > largest_chr) {
          largest_chr = chr;
        }
      }
    }
    console.log("largest_chr is:", largest_chr);
    _ref1 = js_data.qtl_results;
    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
      result = _ref1[_j];
      chr = parseInt(result.chr);
      if (_.isNaN(chr)) {
        if (result.chr === "X") {
          chr = largest_chr + 1;
        } else if (result.chr === "Y") {
          chr = largest_chr + 2;
        }
      }
      x_coords.push((chr * 200) + parseFloat(result.Mb));
      y_coords.push(result.lrs_value);
    }
    x_max = d3.max(x_coords);
    y_max = d3.max(y_coords);
    plot_coordinates = _.zip(x_coords, y_coords);
    console.log(plot_coordinates);
    svg = d3.select("#manhattan_plots").append("svg").attr("width", 1000).attr("height", 800);
    return svg.selectAll("circle").data(plot_coordinates).enter().append("circle").attr("cx", function(d) {
      return 1000 * d[0] / x_max;
    }).attr("cy", function(d) {
      return 800 - (600 * d[1] / y_max);
    }).attr("r", 3);
  });

}).call(this);
